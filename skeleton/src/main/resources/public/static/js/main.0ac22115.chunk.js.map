{"version":3,"sources":["components/Login.js","actions/UserActions.js","components/UserDetails.js","components/Confirmation.js","components/Success.js","components/Credentials.js","components/MainForm.js","components/Register.js","components/HospitalCapacity.js","components/InfectionControl.js","components/PatientMonitoring.js","components/Reported Symptoms.js","components/PickUpStatus.js","components/WaitingList.js","components/AdmissionRequest.js","components/Socket.js","components/Mainscreen.js","components/Homepage.js","components/App.js","serviceWorker.js","reducers/pickupReducer.js","reducers/index.js","reducers/appReducer.js","reducers/authReducer.js","reducers/notificationReducer.js","reducers/organizationReducer.js","reducers/securityReducer.js","reducers/hospitalReducer.js","reducers/monitoringReducer.js","reducers/patientReducer.js","reducers/reportedReducer.js","reducers/admissionReducer.js","reducers/infectionReducer.js","reducers/userReducer.js","reducers/controlReducer.js","reducers/advisoryReducer.js","reducers/vaccineReducer.js","store/customMiddleware.js","store/storeFactory.js","index.js"],"names":["Login","props","handleSubmit","e","preventDefault","formError","validate","state","invalidCredential","setState","error","console","log","JSON","stringify","errors","submitUser","credentials","isError","temp","_usernameNotValid","_passwordNotValid","username","length","usernameError","password","passwordError","usernameNotValid","passwordNotValid","login","onInputChange","clearViolation","value","target","name","prevState","authenticated","submitted","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Message","attached","header","content","Form","size","this","Segment","Input","fluid","icon","iconPosition","placeholder","type","onChange","Divider","errorOutput","Button","color","basic","onClick","warning","to","Component","connect","security","dispatch","data","axios","post","then","response","catch","api","payload","user","options","key","text","UserDetails","saveAndContinue","nextStep","values","Field","required","handleChange","defaultValue","organization","firstName","lastName","Group","age","Dropdown","selection","phone","country","city","Confirmation","back","prevStep","email","className","List","Item","Icon","Content","href","Success","registered","interval","setTimeout","clearInterval","output","Dimmer","active","inverted","Loader","Credentials","MainForm","step","input","event","userRegister","Register","Fragment","columns","Label","HospitalCapacity","Table","compact","celled","Header","Row","HeaderCell","Body","Cell","Footer","fullWidth","colSpan","floated","labelPosition","primary","Menu","pagination","as","InfectionControl","Tab","Pane","PatientMonitoring","ReportedSymptoms","PickUpStatus","divided","Image","avatar","src","WaitingList","Description","Container","Extra","AdmissionRequest","width","Socket","onMessageReceive","msg","messages","sendMessage","clientRef","clientConnected","info","url","topics","onMessage","ref","client","onConnect","onDisconnect","debug","panes","menuItem","position","render","disabled","Mainscreen","useState","activeItem","childRef","useRef","current","visible","stretched","raised","menu","tabular","defaultActiveIndex","Homepage","useEffect","MenuSection","MessageSection","hidden","VaccineSection","title","description","status","release_date","InfectionSection","waiting","died","recovered","infected","clearing","vaccineItems","index","set","transitions","useTransition","p","from","opacity","transform","enter","leave","map","entry","push","div","background","useCallback","item","Page","borderStyle","borderColor","horizontal","Statistic","widths","Value","App","path","exact","component","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","action","combineReducers","application","token","notification","hospital","monitoring","patients","pickup","pickupReducer","reported","admission","infection","users","profile","profileReducer","control","advisory","vaccine","customMiddleware","store","next","param","middleware","process","ENVIRONMENT","logger","createLogger","predicate","getState","collapsed","level","colors","duration","composeEnhancers","composeWithDevTools","initState","createStore","appReducers","applyMiddleware","thunk","storeFactory","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0ac22115.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Divider,\n  Form,\n  Grid,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as user from \"../actions/UserActions\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          credentials: {\n              username: \"mark2\",\n              password: \"mypassword\",\n          },\n          usernameNotValid: false,\n          passwordNotValid: false,\n          invalidCredential: false,\n          errors: {\n              usernameError: \"\",\n              passwordError: \"\"\n          },\n          error: false,\n          authenticated: false,\n          submitted: true\n      }\n\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n\n      const formError = this.validate();\n\n      if (this.state.invalidCredential) {\n          this.setState({\n              error: true\n          });\n      }\n\n      if (formError === true) {\n          this.setState({\n              error: true\n          });\n          console.log(\"Errors: \" + JSON.stringify(this.state.errors));\n      } else {\n          this.setState({\n              error: false\n          }, () =>\n                  (\n                      this.props.submitUser({ 'credentials': this.state.credentials, }),\n                      this.setState({ \"submitted\": true })\n                  )\n          );\n      }\n  }\n\n  \n\n  validate = () => {\n      let isError = false;\n      const temp = {};\n\n      let _usernameNotValid = false;\n      let _passwordNotValid = false;\n      if (this.state.credentials.username.length < 5) {\n          isError = true;\n          _usernameNotValid = true;\n          temp.usernameError = \"User name needs to be atleast 5 characters longs\";\n      }\n\n      if (this.state.credentials.password.length < 5) {\n          isError = true;\n          _passwordNotValid = true;\n          temp.passwordError = \"Password needs to be atleast 5 characters longs\";\n      }\n\n      this.setState({\n          usernameNotValid: _usernameNotValid,\n          passwordNotValid: _passwordNotValid,\n          errors: {\n              usernameError: temp.usernameError,\n              passwordError: temp.passwordError\n          }\n      });\n\n\n\n      return isError;\n  }\n\n  login = (e) => {\n\n  }\n  \n  onInputChange = (e) => {\n\n      if (this.state.invalidCredential) {\n          this.props.clearViolation();\n\n          this.setState({\n              invalidCredential: false,\n              error: false\n          })\n      }\n\n\n      let value = e.target.value\n      switch (e.target.name) {\n          case \"username\":\n              this.setState((prevState, props) => (\n                  {\n                      credentials: {\n                          username: value,\n                          password: prevState.credentials.password\n                      }, ...prevState.credentials\n                  }))\n              break;\n          case \"password\":\n\n              this.setState((prevState, props) => (\n                  {\n                      credentials: {\n                          username: prevState.credentials.username,\n                          password: value\n                      }, ...prevState.credentials\n                  }))\n              break;\n          default:\n              break;\n      }\n\n\n\n  }\n    render() {\n\n        let errorOutput;\n\n        return (\n            <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Message\n                attached\n                header=\"nCov Health Tracker\"\n                content=\"You are accessing secure page, authentication is required.\"\n              />\n              <Form size=\"large\" error={this.state.error}>\n                <Segment attached=\"top\">\n                  <Form.Input\n                    fluid\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"Username\"\n                    type=\"username\"\n                    name=\"username\"\n                    value=\"mark2\"\n                    onChange={e => this.onInputChange(e)}\n                    error={this.state.usernameNotValid}\n                  />\n                  <Form.Input\n                    fluid\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value=\"mypassword\"\n                    onChange={e => this.onInputChange(e)}\n                    error={this.state.passwordNotValid}\n                  />\n        \n                  <Divider />\n                  <Message error header=\"\" content={errorOutput} />\n        \n                  <Button\n                    color=\"grey\"\n                    basic\n                    fluid\n                    size=\"large\"\n                    onClick={e => this.handleSubmit(e)}\n                  >\n                    Login\n                  </Button>\n                </Segment>\n              </Form>\n              <Message attached=\"bottom\" warning size=\"small\">\n                No account ? You can <Link to=\"/register\"> register </Link>\n              </Message>\n            </Grid.Column>\n          </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const data = {\n        \"state\": \"idle\"\n    }\n\n    return {\n        security: data\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitUser: (data) => dispatch(user.loginAPI(data))\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import axios from \"axios\";\n\nexport const loginAPI = (data) => {\n   axios.post('http://viper.net/api/login', {\n    username: data.credentials.username,\n    password: data.credentials.password\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\n    return dispatch => {\n        const request = {\n            type: \"LOGIN\",\n            api: \"LOGIN\",\n            payload: data.credentials\n        }\n        dispatch(request);\n    };\n};\n\nexport const logoutAPI = data => {\n    return {\n        type: \"LOGOUT\",\n        api: \"LOGOUT\",\n        payload: data\n    };\n};\n\nexport const registerAPI = data => {\n    return dispatch => {\n        const request = {\n            type: \"REGISTER\",\n            api: \"REGISTER\",\n            payload: data\n        }\n        dispatch(request);\n    };\n};","import React, { Component } from 'react';\nimport { Button, Divider, Dropdown, Form } from 'semantic-ui-react';\n\nconst options = [\n    { key: 1, text: 'Male', value: 1 },\n    { key: 2, text: 'Female', value: 2 }\n]\nclass UserDetails extends Component {\n\n    saveAndContinue = (e) => {\n        e.preventDefault()\n        this.props.nextStep()\n    }\n\n    render() {\n        const { values } = this.props;\n        return (\n            <Form >\n\n                <Form.Field required>\n                    <label>Organization</label>\n                    <input\n                        placeholder='Organization'\n                        onChange={this.props.handleChange('organization')}\n                        defaultValue={values.organization}\n                    />\n                </Form.Field>\n                <Form.Field required>\n                    <label>First Name</label>\n                    <input\n                        placeholder='First Name'\n                        onChange={this.props.handleChange('firstName')}\n                        defaultValue={values.firstName}\n                    />\n                </Form.Field>\n                <Form.Field required>\n                    <label>Last Name</label>\n                    <input\n                        placeholder='Last Name'\n                        onChange={this.props.handleChange('lastName')}\n                        defaultValue={values.lastName}\n                    />\n                </Form.Field>\n\n                <Form.Group>\n                    <Form.Field>\n                        <label>Age</label>\n                        <input placeholder='Age'\n                            onChange={this.props.handleChange('age')}\n                            defaultValue={values.age}\n                        />\n                    </Form.Field>\n\n                    <Form.Field>\n                        <label>Gender</label>\n                        <Dropdown\n                            placeholder='Male'\n                            selection\n                            options={options}\n                        />\n                    </Form.Field>\n                </Form.Group>\n                <Divider />\n                <Form.Field required>\n                    <label>Phone</label>\n                    <input placeholder='Phone'\n                        onChange={this.props.handleChange('phone')}\n                        defaultValue={values.phone}\n                    />\n                </Form.Field>\n                <Form.Field required>\n                    <label>Country</label>\n                    <input placeholder='Country'\n                        onChange={this.props.handleChange('country')}\n                        defaultValue={values.country}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>City</label>\n                    <input placeholder='City'\n                        onChange={this.props.handleChange('city')}\n                        defaultValue={values.city}\n                    />\n                </Form.Field>\n\n\n                <Divider />\n                <Button onClick={this.saveAndContinue}>Next </Button>\n            </Form>\n\n        )\n    }\n}\n\nexport default UserDetails;","import React, { Component } from 'react';\nimport { Button, List, Divider } from 'semantic-ui-react';\n\nclass Confirmation extends Component {\n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values: { firstName, lastName, email, age, city, country, username, password, phone, organization } } = this.props;\n\n        return (\n            <div>\n                <h1 className=\"ui centered\">Confirmation</h1>\n                <p>Click Confirm if the following details have been correctly entered</p>\n                <List>\n                    <List.Item>\n                        <List.Icon name='users' />\n                        <List.Content>Organization: {organization}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='users' />\n                        <List.Content>First Name: {firstName}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='users' />\n                        <List.Content>Last Name: {lastName}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='mail' />\n                        <List.Content>\n                            Email: <a href='mailto:proxyshahdow@gmail.com'>{email}</a>\n                        </List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='calendar' />\n                        <List.Content>Age: {age} years old</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='marker' />\n                        <List.Content>Address: {city}, {country}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='user' />\n                        <List.Content>Username: {username}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='key' />\n                        <List.Content>Password: {password}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='phone' />\n                        <List.Content>Phone: {phone}</List.Content>\n                    </List.Item>\n                </List>\n                <Divider />\n                <Button onClick={this.back}>Back</Button>\n                <Button onClick={this.saveAndContinue}>Confirm</Button>\n            </div>\n        )\n    }\n}\n\nexport default Confirmation;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nclass Success extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            registered: false\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setTimeout(() => {\n            this.setState({\n                registered: true\n            })\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n\n        const output = (\n            <Dimmer active inverted>\n                <Loader>Saving changes..., If your account is approved you will receive an email.</Loader>\n            </Dimmer>\n        )\n\n        return (\n            this.state.registered ? <Redirect to='/' /> : output\n        )\n    }\n}\n\nexport default Success;","import React, { Component } from 'react';\nimport { Form, Button, Divider } from 'semantic-ui-react';\n\nclass Credentials extends Component {\n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values } = this.props\n        return (\n            <Form color='blue' >\n\n                <Form.Field required>\n                    <label>Username</label>\n                    <input placeholder='Username'\n                        onChange={this.props.handleChange('username')}\n                        defaultValue={values.username}\n                    />\n                </Form.Field>\n                <Form.Field required>\n                    <label>Password</label>\n                    <input placeholder='Password'\n                        type=\"password\"\n                        onChange={this.props.handleChange('password')}\n                        defaultValue={values.password}\n                    />\n                </Form.Field>\n                <Form.Field required>\n                    <label>Email Address: </label>\n                    <input placeholder='Email'\n                        onChange={this.props.handleChange('email')}\n                        defaultValue={values.email}\n                    />\n                </Form.Field>\n                <Divider />\n                <Button onClick={this.back}>Back</Button>\n                <Button onClick={this.saveAndContinue}>Next </Button>\n            </Form>\n        )\n    }\n}\n\nexport default Credentials;","import React, { Component } from 'react';\nimport UserDetails from './UserDetails';\nimport Confirmation from './Confirmation';\nimport Success from './Success';\nimport * as user from '../actions/UserActions';\nimport { connect } from 'react-redux';\nimport Credentials from './Credentials';\n\nclass MainForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            step: 1,\n            organization: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            age: '',\n            city: '',\n            country: '',\n            username: '',\n            password: '',\n            phone: ''\n        }\n    }\n\n    nextStep = () => {\n        const { step } = this.state\n        this.setState({\n            step: step + 1\n        })\n    }\n\n    prevStep = () => {\n        const { step } = this.state\n        this.setState({\n            step: step - 1\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        const { step } = this.state;\n        const { firstName, lastName, email, age, city, country, username, password, organization, phone } = this.state;\n        const values = { firstName, lastName, email, age, city, country, username, password, organization, phone };\n\n        switch (step) {\n            case 1:\n                return <UserDetails\n                    nextStep={this.nextStep}\n                    handleChange={this.handleChange}\n                    values={values}\n                />\n            case 2:\n                return <Credentials\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    handleChange={this.handleChange}\n                    values={values}\n                />\n            case 3:\n                return <Confirmation\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                />\n            case 4:\n                this.props.userRegister({\n                    'firstName': this.state.firstName,\n                    'lastName': this.state.lastName,\n                    'email': this.state.email,\n                    'age': this.state.age,\n                    'city': this.state.city,\n                    'country': this.state.country,\n                    'username': this.state.username,\n                    'password': this.state.password,\n                    'organization': this.state.organization,\n                    'phone': this.state.phone\n                })\n                return <Success />\n            default:\n                \n        }\n\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userRegister: (data) => dispatch(user.registerAPI(data)),\n    }\n};\nexport default connect(null, mapDispatchToProps)(MainForm);","import React, { Component } from 'react';\nimport { Grid, Label, Segment } from 'semantic-ui-react';\nimport MainForm from './MainForm';\n\nclass Register extends Component {\n\n    render() {\n        return (\n            <React.Fragment> <br /> <br /><br />\n                <Grid columns={3}>\n                    <Grid.Column></Grid.Column>\n                    <Grid.Column>\n                        <Segment >\n                            <Label attached='top'>Registration</Label>\n                            <MainForm />\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column></Grid.Column>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Register;","import React, { Component } from \"react\";\nimport { Button, Icon, Menu, Table } from \"semantic-ui-react\";\n\nclass HospitalCapacity extends Component {\n  state = {};\n  render() {\n    return (\n      <Table compact celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Hospital Name</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Address</Table.HeaderCell>\n            <Table.HeaderCell>Available Rooms</Table.HeaderCell>\n            <Table.HeaderCell>Available Beds</Table.HeaderCell>\n            <Table.HeaderCell>Available Testing Kits</Table.HeaderCell>\n            <Table.HeaderCell>Last Updated On</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>\n              <Button.Group basic fluid>\n                <Button>Update</Button>\n                <Button>Delete</Button>\n              </Button.Group>\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n\n        <Table.Footer fullWidth>\n          <Table.Row>\n            <Table.HeaderCell colSpan=\"12\">\n              <Button\n                floated=\"left\"\n                icon\n                labelPosition=\"left\"\n                primary\n                size=\"small\"\n              >\n                <Icon name=\"user\" /> Add Hospital\n              </Button>\n              <Menu floated=\"right\" pagination>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron left\" />\n                </Menu.Item>\n                <Menu.Item as=\"a\">1</Menu.Item>\n                <Menu.Item as=\"a\">2</Menu.Item>\n                <Menu.Item as=\"a\">3</Menu.Item>\n                <Menu.Item as=\"a\">4</Menu.Item>\n                <Menu.Item as=\"a\" icon>\n                  <Icon name=\"chevron right\" />\n                </Menu.Item>\n              </Menu>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    );\n  }\n}\n\nexport default HospitalCapacity;\n","import React, { Component } from \"react\";\nimport { Button, Icon, Menu, Tab, Table } from \"semantic-ui-react\";\n\nclass InfectionControl extends Component {\n  state = {};\n  render() {\n    return (\n      <Tab.Pane>\n        <Table compact celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Location</Table.HeaderCell>\n              <Table.HeaderCell>Alert Level</Table.HeaderCell>\n              <Table.HeaderCell>PUI</Table.HeaderCell>\n              <Table.HeaderCell>PUM</Table.HeaderCell>\n              <Table.HeaderCell>Infected</Table.HeaderCell>\n              <Table.HeaderCell>Recovered</Table.HeaderCell>\n              <Table.HeaderCell>Last Updated On </Table.HeaderCell>\n              <Table.HeaderCell>Action</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell>\n                <Button.Group basic fluid>\n                  <Button>Update</Button>\n                  <Button>Delete</Button>\n                </Button.Group>\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"12\">\n                <Button\n                  floated=\"left\"\n                  icon\n                  labelPosition=\"left\"\n                  primary\n                  size=\"small\"\n                >\n                  <Icon name=\"user\" /> Add Location\n                </Button>\n                <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default InfectionControl;\n","import React, { Component } from \"react\";\nimport { Button, Icon, Menu, Tab, Table } from \"semantic-ui-react\";\n\nclass PatientMonitoring extends Component {\n  state = {};\n  render() {\n    return (\n      <Tab.Pane>\n        <Table compact celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Patient ID</Table.HeaderCell>\n              <Table.HeaderCell>Patient Name</Table.HeaderCell>\n              <Table.HeaderCell>Gender</Table.HeaderCell>\n              <Table.HeaderCell>Age</Table.HeaderCell>\n              <Table.HeaderCell>Address</Table.HeaderCell>\n              <Table.HeaderCell>Test Result</Table.HeaderCell>\n              <Table.HeaderCell>Viral Strain</Table.HeaderCell>\n              <Table.HeaderCell>Status</Table.HeaderCell>\n              <Table.HeaderCell>Hospital</Table.HeaderCell>\n              <Table.HeaderCell>Admission Date</Table.HeaderCell>\n              <Table.HeaderCell>Discharged Date</Table.HeaderCell>\n              <Table.HeaderCell>Action</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>1</Table.Cell>\n              <Table.Cell>Danica Reyes</Table.Cell>\n              <Table.Cell>Female</Table.Cell>\n              <Table.Cell>17</Table.Cell>\n              <Table.Cell>Makati, Philippines</Table.Cell>\n              <Table.Cell>Positive</Table.Cell>\n              <Table.Cell>S Type</Table.Cell>\n              <Table.Cell>Recovering</Table.Cell>\n              <Table.Cell>St. Lukes Hospital</Table.Cell>\n              <Table.Cell>March 23, 2019</Table.Cell>\n              <Table.Cell>March 24, 2019</Table.Cell>\n              <Table.Cell>\n                <Button.Group basic fluid>\n                  <Button>Update</Button>\n                  <Button>Delete</Button>\n                </Button.Group>\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"12\">\n                <Button\n                  floated=\"left\"\n                  icon\n                  labelPosition=\"left\"\n                  primary\n                  size=\"small\"\n                >\n                  <Icon name=\"user\" /> Add Patient\n                </Button>\n                <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default PatientMonitoring;\n","import React, { Component } from \"react\";\nimport { Button, Icon, Menu, Tab, Table } from \"semantic-ui-react\";\n\nclass ReportedSymptoms extends Component {\n  state = {};\n  render() {\n    return (\n      <Tab.Pane>\n        <Table compact celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Username</Table.HeaderCell>\n              <Table.HeaderCell>Age</Table.HeaderCell>\n              <Table.HeaderCell>Address</Table.HeaderCell>\n              <Table.HeaderCell>Symptom</Table.HeaderCell>\n              <Table.HeaderCell>Started On</Table.HeaderCell>\n              <Table.HeaderCell>Date Reported</Table.HeaderCell>\n              <Table.HeaderCell>Action</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell>\n                <Button.Group basic fluid>\n                  <Button>Update</Button>\n                  <Button>Delete</Button>\n                </Button.Group>\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"12\">\n                <Button\n                  floated=\"left\"\n                  icon\n                  labelPosition=\"left\"\n                  primary\n                  size=\"small\"\n                >\n                  <Icon name=\"user\" /> Add Symptom\n                </Button>\n                <Menu floated=\"right\" pagination>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron left\" />\n                  </Menu.Item>\n                  <Menu.Item as=\"a\">1</Menu.Item>\n                  <Menu.Item as=\"a\">2</Menu.Item>\n                  <Menu.Item as=\"a\">3</Menu.Item>\n                  <Menu.Item as=\"a\">4</Menu.Item>\n                  <Menu.Item as=\"a\" icon>\n                    <Icon name=\"chevron right\" />\n                  </Menu.Item>\n                </Menu>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default ReportedSymptoms;\n","import React, { Component } from \"react\";\nimport { Button, Image, List } from \"semantic-ui-react\";\n\nclass PickUpStatus extends Component {\n  state = {};\n  render() {\n    return (\n      <List divided>\n      <List.Item>\n        <List.Content floated=\"right\">\n          <Button.Group basic>\n            <Button>View Status</Button>\n            <Button>Delete</Button>\n          </Button.Group>\n        </List.Content>\n        <Image\n          avatar\n          src=\"https://react.semantic-ui.com/images/avatar/small/rachel.png\"\n        />\n        <List.Content>Lena</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content floated=\"right\">\n          <Button.Group basic>\n            <Button>View Status</Button>\n            <Button>Delete</Button>\n          </Button.Group>\n        </List.Content>\n        <Image\n          avatar\n          src=\"https://react.semantic-ui.com/images/avatar/small/rachel.png\"\n        />\n        <List.Content>Lindsay</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content floated=\"right\">\n          <Button.Group basic>\n            <Button>View Status</Button>\n            <Button>Delete</Button>\n          </Button.Group>\n        </List.Content>\n        <Image\n          avatar\n          src=\"https://react.semantic-ui.com/images/avatar/small/rachel.png\"\n        />\n        <List.Content>Mark</List.Content>\n      </List.Item>\n      <List.Item>\n        <List.Content floated=\"right\">\n          <Button.Group basic>\n            <Button>View Status</Button>\n            <Button>Delete</Button>\n          </Button.Group>\n        </List.Content>\n        <Image\n          avatar\n          src=\"https://react.semantic-ui.com/images/avatar/small/rachel.png\"\n        />\n        <List.Content>Molly</List.Content>\n      </List.Item>\n    </List>\n    );\n  }\n}\n\nexport default PickUpStatus;\n","import React, { Component } from \"react\";\nimport { Button, Container, Divider, Item } from \"semantic-ui-react\";\nclass WaitingList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Item.Group divided>\n          <Item>\n            <Item.Image\n              size=\"small\"\n              src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n            />\n            <Item.Content verticalAlign=\"middle\">\n              <Item.Header>John Santos</Item.Header>\n              <Item.Description>\n                <Container>\n                  <p>\n                    Gender: Male <br />\n                    Age: 24 <br />\n                    Address: Manila <br />\n                    Symptoms: Difficulty Breathing\n                  </p>\n                  <Divider />\n                </Container>\n              </Item.Description>\n              <Item.Extra>\n                <Button.Group basic fluid>\n                  <Button>View Profile</Button>\n                  <Button>Accept</Button>\n                  <Button>Reject</Button>\n                </Button.Group>\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n    );\n  }\n}\n\nexport default WaitingList;\n","import React, { Component } from \"react\";\nimport { Grid, Label, Segment, Tab } from \"semantic-ui-react\";\nimport PickUpStatus from \"./PickUpStatus\";\nimport WaitingList from \"./WaitingList\";\n\nclass AdmissionRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Tab.Pane>\n        <Grid>\n          <Grid.Column width={8}>\n            <Segment>\n              <Label attached=\"top\">Waiting list</Label>\n              <WaitingList />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment>\n              <Label attached=\"top\">Pickup Queue</Label>\n              <PickUpStatus />\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default AdmissionRequest;\n","import React, { Component } from \"react\";\nimport SockJsClient from \"react-stomp\";\n\nclass Socket extends Component {\n  componentDidMount() {\n    console.info(\"Socket connected\");\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientConnected: false,\n      messages: []\n    };\n  }\n\n  onMessageReceive = (msg) => {\n    console.log(\"Recieved: \" + JSON.stringify(msg));\n\n    this.setState(prevState => ({\n      messages: [...prevState.messages, msg]\n    }));\n  };\n\n  sendMessage = msg => {\n    try {\n      this.clientRef.sendMessage(\"/app/broadcast\", JSON.stringify(msg));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  render() {\n    return (\n      <SockJsClient\n        url={\"http://viper.net/ws\"}\n        topics={[\"/topic/all\"]}\n        onMessage={this.onMessageReceive}\n        ref={client => {\n          this.clientRef = client;\n        }}\n        onConnect={() => {\n          this.setState({ clientConnected: true });\n        }}\n        onDisconnect={() => {\n          this.setState({ clientConnected: false });\n        }}\n        debug={false}\n      />\n    );\n  }\n}\n\nexport default Socket;\n","import React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport {\n  Divider,\n  Grid,\n  Label,\n  Menu,\n  Message,\n  Segment,\n  Tab\n} from \"semantic-ui-react\";\nimport HospitalCapacity from \"./HospitalCapacity\";\nimport InfectionControl from \"./InfectionControl\";\nimport PatientMonitoring from \"./PatientMonitoring\";\nimport ReportedSymptoms from \"./Reported Symptoms\";\nimport AdmissionRequest from \"./AdmissionRequest\";\nimport Socket from \"./Socket\";\n\nconst panes = [\n  {\n    menuItem: {\n      key: \"users\",\n      icon: \"users\",\n      content: \"Admission\",\n      position: \"left\"\n    },\n    render: () => <AdmissionRequest />\n  },\n  {\n    menuItem: {\n      key: \"patient\",\n      icon: \"users\",\n      content: \"Monitoring\",\n      position: \"left\"\n    },\n    render: () => <PatientMonitoring />\n  },\n  {\n    menuItem: {\n      key: \"infection\",\n      icon: \"users\",\n      content: \"Control\",\n      position: \"left\"\n    },\n    render: () => <InfectionControl />\n  },\n  {\n    menuItem: {\n      key: \"symptoms\",\n      icon: \"users\",\n      content: \"Reported\",\n      position: \"left\"\n    },\n    render: () => <ReportedSymptoms />\n  },\n  {\n    menuItem: {\n      key: \"hospital\",\n      icon: \"users\",\n      content: \"Hospital\",\n      position: \"left\"\n    },\n    render: () => (\n      <Tab.Pane>\n        <HospitalCapacity />{\" \"}\n      </Tab.Pane>\n    )\n  },\n  {\n    menuItem: {\n      key: \"public\",\n      icon: \"users\",\n      content: \"Advisory\",\n      position: \"left\",\n      disabled: false\n    },\n    render: () => <Tab.Pane>Public Advisory</Tab.Pane>\n  },\n  {\n    menuItem: {\n      key: \"vaccine\",\n      icon: \"users\",\n      content: \"Vaccine\",\n      position: \"left\",\n      disabled: false\n    },\n    render: () => <Tab.Pane>Vaccine Status</Tab.Pane>\n  }\n];\n\nfunction Mainscreen() {\n  const [activeItem, setActiveItem] = useState(0);\n  const childRef = useRef();\n\n  return (\n    <React.Fragment>\n      <Socket ref={childRef} />\n      <Menu>\n        <Menu.Menu position=\"left\">\n          <Menu.Item name=\"Health Tracker\" />\n        </Menu.Menu>\n        <Menu.Menu position=\"right\">\n          <Menu.Item\n            name=\"logout\"\n            active={activeItem === \"logout\"}\n            onClick={() => childRef.current.sendMessage(\"temp\")}\n          />\n        </Menu.Menu>\n      </Menu>\n      <Grid columns=\"equal\" divided>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <Message visible>Welcome, Mark!</Message>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row stretched>\n          <Grid.Column width={3}>\n            <Segment>\n              <Segment.Group raised>\n                <Label attached=\"top\">Organization</Label>\n                <Segment>\n                  Name: Department of Health <br />\n                  Country: Philippines <br />\n                </Segment>\n              </Segment.Group>\n\n              <Segment.Group raised>\n                <Label attached=\"top\">General Overview</Label>\n                <Segment>\n                  New: 2,323\n                  <Divider />\n                  Infected: 34,223 <br />\n                  Recovered: 12,323 <br />\n                  Died: 18,099 <br />\n                  Awaiting Result: 3,223\n                  <Divider />\n                  <b> Total: 66, 968</b>\n                </Segment>\n              </Segment.Group>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={13}>\n            <Tab\n              menu={{ fluid: true, tabular: true }}\n              panes={panes}\n              defaultActiveIndex={0}\n            />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row stretched>\n          <Grid.Column width={16}>\n            <Divider />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Mainscreen;\n","import React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { animated, useTransition } from \"react-spring\";\nimport {\n  Button,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Item,\n  Message,\n  Segment,\n  Statistic,\n  Container\n} from \"semantic-ui-react\";\nimport \"../styles/homepage.css\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\nexport default function Homepage() {\n  useEffect(() => {\n    console.log(\"Homepage component loaded\");\n  });\n\n  const vaccines = [\n    {\n      data: {\n        title: \"Remdesivir\",\n        description:\n          \"Remdesivir (development code GS-5734) is a novel antiviral drug in the class of nucleotide analogs. It was developed by Gilead Sciences as a treatment for Ebola virus disease and Marburg virus infections,[1] though it subsequently was found to show antiviral activity against other single stranded RNA viruses such as respiratory syncytial virus, Junin virus, Lassa fever virus, Nipah virus, Hendra virus, and the coronaviruses (including MERS and SARS viruses\",\n        status: \"Trial Stage\",\n        release_date: \"December 26, 2020\"\n      }\n    },\n    {\n      data: {\n        title: \"BNT162\",\n        description:\n          \"Gilead is a longtime drugmaker best known for developing the first major cure for hepatitis-C in Sovaldi, a therapy that changed the standard of care for that disease but also kicked off the national debate about drug pricing. The company has experience developing and marketing HIV drugs, including Truvada for pre-exposure prophylaxis (PrEP), its preventive HIV medicine\",\n        status: \"Planning Stage\",\n        release_date: \"December 26, 2020\"\n      }\n    }\n  ];\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <MenuSection />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <MessageSection value=\"Enhance community quarantine nationwide, effective today.\" />\n            <Divider hidden />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <VaccineSection data={vaccines} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <InfectionSection\n              waiting=\"23\"\n              died=\"34\"\n              recovered=\"69\"\n              infected=\"60\"\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <footer>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Container textAlign=\"left\">Engineered by: Mark Tagab</Container>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Container textAlign=\"right\">\n                <Icon\n                  name=\"facebook\"\n                  size=\"large\"\n                  color=\"grey\"\n                  onClick={() => console.log(\"facebook\")}\n                />\n                <Icon\n                  name=\"linkedin\"\n                  size=\"large\"\n                  color=\"grey\"\n                  onClick={() => console.log(\"linked\")}\n                />\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </footer>\n    </React.Fragment>\n  );\n}\n\nfunction MenuSection() {\n\n\n  const register = () => {\n    axios\n      .get(\"http://localhost:8080/api/register\")\n      .then(function(response) {\n        // handle success\n        console.log(response);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  };\n  return (\n    <Segment clearing>\n      <Item>\n        <Button basic floated=\"right\" size=\"mini\" key=\"login\">\n          <Icon name=\"key\" />\n          <Link to=\"/login\">Login</Link>\n        </Button>\n        <Button basic floated=\"right\" size=\"mini\" key=\"mini\">\n          <Icon name=\"edit\" />\n          <Link to=\"/register\">Register</Link>\n        </Button>\n      </Item>\n    </Segment>\n  );\n}\n\nfunction MessageSection({ value }) {\n  useEffect(() => {\n    console.log(\"Message Loaded\");\n  });\n\n  return <Message attached content={value} color=\"red\" size=\"big\" />;\n}\n\nfunction VaccineSection({ data }) {\n  useEffect(() => {\n    console.log(\"Vaccine Loaded\");\n  });\n\n  const vaccineItems = [];\n  const [index, set] = useState(0);\n  const transitions = useTransition(index, p => p, {\n    from: { opacity: 0, transform: \"translate3d(100%,0,0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\n    leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" }\n  });\n\n  data.map(entry =>\n    vaccineItems.push(({ style }) => (\n      <animated.div style={{ ...style, background: \"#FCFCFC\", color: \"black\" }}>\n        <Container textAlign=\"justified\" fluid>\n          <Header as=\"h1\">{entry.data.title}</Header>\n          <Divider />\n          <p>{entry.data.description}</p>\n          <Divider />\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <p>Status: {entry.data.status}</p>\n              </Grid.Column>\n              <Grid.Column width={8} textAlign=\"right\">\n                Release Date: {entry.data.release_date}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </animated.div>\n    ))\n  );\n\n  const onClick = useCallback(\n    () => set(state => (state + 1) % data.length),\n    []\n  );\n  return (\n    <Item className=\"vaccineRow\">\n      <div className=\"vaccine\" onClick={onClick}>\n        {transitions.map(({ item, props, key }) => {\n          const Page = vaccineItems[item];\n          return <Page key={key} style={props} />;\n        })}\n      </div>\n    </Item>\n  );\n}\n\nfunction InfectionSection({ waiting, infected, recovered, died }) {\n  useEffect(() => {\n    console.log(\"Infection Loaded\");\n  });\n\n  return (\n    <Segment style={{ borderStyle: \"solid\", borderColor: \"grey\" }}>\n      <Divider horizontal>\n        <Header as=\"h5\">\n          <Icon name=\"heartbeat\" />\n          Local Infections\n        </Header>\n      </Divider>\n      <Statistic.Group widths=\"four\">\n        <Statistic color=\"red\">\n          <Statistic.Value>{infected}</Statistic.Value>\n          <Statistic.Label>Infected</Statistic.Label>\n        </Statistic>\n        <Statistic color=\"green\">\n          <Statistic.Value>{recovered}</Statistic.Value>\n          <Statistic.Label>Recovered</Statistic.Label>\n        </Statistic>\n        <Statistic color=\"black\">\n          <Statistic.Value>{died} </Statistic.Value>\n          <Statistic.Label>Died</Statistic.Label>\n        </Statistic>\n        <Statistic color=\"brown\">\n          <Statistic.Value>{waiting}</Statistic.Value>\n          <Statistic.Label>Awaiting Test Result</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n      <Divider />\n    </Segment>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport Mainscreen from './Mainscreen';\nimport Homepage from './Homepage';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact={true} component={Homepage} />\n                    <Route path=\"/main\" component={Mainscreen} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\n\nimport appReducer from './appReducer';\nimport authReducer from './authReducer';\nimport controlReducer from './controlReducer';\nimport hospitalReducer from './hospitalReducer';\nimport infectionReducer from './infectionReducer';\nimport monitoringReducer from './monitoringReducer';\nimport notificationReducer from './notificationReducer';\nimport patientReducer from './patientReducer';\nimport pickupReducer from './pickupReducer';\nimport profileReducer from './pickupReducer';\nimport reportedReducer from './reportedReducer';\nimport securityReducer from './securityReducer';\nimport admissionReducer from './admissionReducer';\nimport userReducer from './userReducer';\nimport organizationReducer from './organizationReducer';\nimport advisoryReducer from './advisoryReducer';\nimport vaccineReducer from './vaccineReducer';\n\nexport default combineReducers({\n    application: appReducer,\n    token: authReducer,\n    notification: notificationReducer,\n    organization: organizationReducer,\n    security: securityReducer,\n    hospital: hospitalReducer,\n    monitoring: monitoringReducer,\n    patients: patientReducer,\n    pickup: pickupReducer,\n    reported: reportedReducer,\n    admission: admissionReducer,\n    infection: infectionReducer,\n    users: userReducer,\n    profile: profileReducer,\n    control: controlReducer,\n    advisory: advisoryReducer,\n    vaccine: vaccineReducer\n});","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export default (state = {}, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","export const customMiddleware = store => next => action => {\n\n    switch (action.type) {\n        case \"GET_TITLE\":\n            let payload = {\n                action: action.api,\n                param: action.payload\n            };\n            store.dispatch(payload);\n            break;\n        default:\n            return next(action);\n\n    }\n}","import appReducers from \"../reducers/\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { customMiddleware } from './customMiddleware';\nimport{  createLogger } from 'redux-logger';\nimport thunk from \"redux-thunk\";\n\nconst middleware = [];\nif(process.env.ENVIRONMENT !== 'production') {\n  const logger = createLogger({\n    predicate: (getState, action) => action.type !== 'LOGIN',\n    collapsed: true,\n    level: console.log,\n    colors: {\n      title: () => '#008000'\n    },\n    duration: true,\n  });\n  middleware.push(logger);\n}\n\nconst composeEnhancers = composeWithDevTools({});\n\n\nexport default  (initState = {}) =>  createStore(appReducers, initState, composeEnhancers(\n    applyMiddleware(thunk, customMiddleware),\n    applyMiddleware(...middleware)\n  ));","import React from \"react\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\n\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport storeFactory from \"./store/storeFactory\";\nimport defaultState from \"./configuration/defaultState.json\";\n\nconst store = storeFactory(defaultState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}