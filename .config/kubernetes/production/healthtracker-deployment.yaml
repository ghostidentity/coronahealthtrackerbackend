apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: account
  name: accountapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: account
  replicas: 1
  template:
    metadata:
      name: account
      labels:
        run: account
        app: account
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: account-container
          image: mtagab/account:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: account-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: account-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: government
  name: governmentapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: government
  replicas: 1
  template:
    metadata:
      name: government
      labels:
        run: government
        app: government
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: government-container
          image: mtagab/government:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: government-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: government-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: infection
  name: infectionapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: infection
  replicas: 1
  template:
    metadata:
      name: infection
      labels:
        run: infection
        app: infection
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: infection-container
          image: mtagab/infection:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: health-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: health-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: notification
  name: notificationapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: notification
  replicas: 1
  template:
    metadata:
      name: notification
      labels:
        run: notification
        app: notification
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: notification-container
          image: mtagab/notification:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: notification-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: notification-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: security
  name: securityapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: security
  replicas: 1
  template:
    metadata:
      name: security
      labels:
        run: security
        app: security
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: security-container
          image: mtagab/security:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: security-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: security-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: website
  name: websiteapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: website
  replicas: 1
  template:
    metadata:
      name: website
      labels:
        run: website
        app: website
    spec:
      containers:
        - name: frontend-container
          image: mtagab/website:latest
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hospital
  name: hospitalapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: hospital
  replicas: 1
  template:
    metadata:
      name: hospital
      labels:
        run: hospital
        app: hospital
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: hospital-container
          image: mtagab/hospital:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: hospital-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: hospital-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: person
  name: personapp
  namespace: default
spec:
  selector:
    matchLabels:
      run: person
  replicas: 1
  template:
    metadata:
      name: person
      labels:
        run: person
        app: person
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: healthtracker-pv-claim
      containers:
        - name: person-container
          image: mtagab/person:latest
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-credential
                  key: database-password
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: person-config
                  key: database_host
            - name: POSTGRES_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: person-config
                  key: database_name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
            readinessProbe:
              httpGet:
                path: /actuator/health
                port: 8080
              periodSeconds: 15
              timeoutSeconds: 1
